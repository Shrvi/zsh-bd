# vim:ft=zsh noet

zparseopts -D -A opts f d h

[[ -v opts[-h] ]] && {
	<<- EOU
		usage: $0 [-fh] [n|parent|{pattern ...}|{.[...]}]

		   -f     parent will be interpreted as a number
		   -h     print this help
	EOU
	return
}

(( ! ARGC )) &&
	{ cd $PWD:h; return }

local parents=( / ${(s:/:)PWD:h} )
local dest=${(j:*:)@}

if [[ ! -v opts[-f] ]]
then
	local d
	(( d=${parents[(I)$dest]} )) || (( d=${parents[(I)$dest*]} ))

	(( d > 0 )) &&
		{ cd "/${(j:/:)parents[2, d]}"; return }

	[[ $dest =~ '^\.+$' ]] &&
		{ cd "/${(j:/:)parents[2,-(${#dest}+1)]}"; return }
fi

[[ $dest == <1-> ]] &&
	{ cd "/${(j:/:)parents[2, $#parents - dest + 1]}"; return }

[[ $dest == <0-0> ]] &&
	cd /

